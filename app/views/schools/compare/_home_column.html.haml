%li{id: "school_column_#{student_school.id}", class: "sortable_school #{i ==0 ? 'first' : ''} #{i == 4 ? 'last' : ''}"}
  .li_frame.draggable
    .school_star.desktop.line
      %span
        = image_tag('star_starred.png', id: "star_#{student_school.id}_starred", class: 'star_starred', style: "display: #{student_school.starred? ? 'inline' : 'none'}; cursor: pointer;", data: {student_school_id: student_school.id})
        = image_tag('star_unstarred.png', id: "star_#{student_school.id}_unstarred", class: 'star_unstarred', style: "display: #{student_school.starred? ? 'none' : 'inline'}; cursor: pointer;", data: {student_school_id: student_school.id} )

    .school_name.line
      = school.name

    .school_your_fit_icon.line.light
      - PreferenceCategory.active(current_student.grade_level).each do |category|
        - category.active_preferences(current_student.grade_level).each do |preference|
          - if school.has_preference?(preference)
            - if current_student.preference_ids.try(:include?, preference.id)
              %span{:aria => {hidden: 'true'}, id: "school_#{school.id}", data: {tags: "['#{preference.name}']"}, :class => "icon category_icon preference_#{preference.id}_icon #{category.glyph_class}", title: "#{preference.name}"}
            - else
              %span{:aria => {hidden: 'true'}, id: "school_#{school.id}", data: {tags: "['#{preference.name}']"}, :class => "icon category_icon preference_#{preference.id}_icon #{category.glyph_class}", style: "display: none;", title: "#{preference.name}"}


    - if TRANSITION_GRADES.include?(current_student.grade_level)
      .school_demand.line.light
        = school.open_seats(current_student.grade_level)
        open seats
        %br/
        = school.applicants(current_student.grade_level)
        applicants
        %br/
        = school.applicants_per_open_seat(current_student.grade_level, last_school_year)
        applicants/open seat


    .school_travel.line.light
      - if student_school.distance.present?
        = spacer_helper(student_school.distance)
        &nbsp;mi

    .school_eligibility.line.light
      =raw eligibility_helper(spacer_helper(student_school.eligibility))

    .school_hours.line.light
      = truncate(school.api_hours.try(:[], :Description), length: 40)

    - if SURROUND_CARE_GRADES.include?(current_student.grade_level)
      .school_surround_care.line.light
        - if school.api_basic_info.try(:[], :BeforeSchPrograms).present?
          Before School
          %br/

        - if school.api_basic_info.try(:[], :AfterSchPrograms).present?
          After School

    -# .school_type.line
    -#   = school.api_basic_info.try(:[], :SchoolType)

    .school_grades.line.light
      = grade_levels_helper(school.grade_levels)

    .school_enrollment.line.light
      = school.total_seats(current_student.grade_level)

    .school_special_app.line.light
      = special_application_helper(school.api_description.try(:[], :isspecialappprocedures))

    .school_awc.line.light
      = awc_helper(school.api_basic_info.try(:[], :IsAWC))

    .school_mcas.line.light
      = school_tier_helper(student_school.tier)

    .school_uniform.line.light
      = school.api_description.try(:[], :uniformpolicy)

    .school_health.line.mid.light
      =raw student_support_list_helper(school.api_student_support)

    .school_focus.line.long.light
      = truncate(school.api_description.try(:[], :schfocus), length: 240)

    .school_facilities.line.long.light
      = truncate(facilities_list_helper(school.api_facilities), length: 240)

    - if UPPER_GRADES.include?(current_student.grade_level)
      .school_sports.line.long.light
        = truncate(sports_list_helper(school.api_sports), length: 240)

    .school_comm_partners.line.long.light
      = truncate(partners_list_helper(school.api_partners), length: 240)
