%div{id: 'home_schools_list', class: "schools_list #{(params[:list_type] == 'ell' || params[:list_type] == 'sped' || params[:list_type] == 'zone') ? 'hidden' : ''}"}
  - if @home_schools.present?
    %div.light{ style: "margin: 0 3em 1em 0;" }
      Below is a list of your Home-Based schools.
      To see more information on each school, please click the 'i' icon.
      You can also click the star icon to highlight your favorites.
  %div{ style: "margin-bottom: 2em;font-size:12pt;"  }
    To explore the details about the quality of your home-based schools, please visit your
    .dropdown
      %button.dropbtn Customized School Quality Report
      .dropdown-content
        %a{target: "_blank", class: "text_B0", :href => "http://dashboard.cityofboston.gov/t/BostonPublicSchool/views/SQF2015-16Spanish/Scores?:embed=y&:showShareOptions=true&:display_count=no&:showVizHome=no&School%20Code=#{@home_school_ids}"} Spanish
        %a{target: "_blank", class: "text_B0", :href => "http://dashboard.cityofboston.gov/t/BostonPublicSchool/views/SQF2015-16Portuguese/Scores?:embed=y&:showShareOptions=true&:display_count=no&:showVizHome=no&School%20Code=#{@home_school_ids}"} Portuguese
        %a{target: "_blank", class: "text_B0", :href => "http://dashboard.cityofboston.gov/t/BostonPublicSchool/views/SQF2015-16Haitian/Scores?:embed=y&:showShareOptions=true&:display_count=no&:showVizHome=no&School%20Code=#{@home_school_ids}"} Haitian
        %a{target: "_blank", class: "text_B0", :href => "http://dashboard.cityofboston.gov/t/BostonPublicSchool/views/SQFMetricsDashboard/Scores?:embed=y&:showShareOptions=true&:display_count=no&:showVizHome=no&School%20Code=#{@home_school_ids}"} English
  .list_content
    .flexible_content
      - if @home_schools.present?
        .menu_list
          %div{id: 'home_header', class: 'li_frame school_list_header', style: 'display: block;'}
            #sortable_star_column.sortable_column.menu_bloc.desktop.no_mobile

            #sortable_school_name_column.menu_bloc.sortable_column
              .column_title
                Name

            #sortable_fit_column.menu_bloc.sortable_column
              .column_title
                Fit Score

            #sortable_distance_column.menu_bloc.sortable_column
              .column_title
                Travel

            #sortable_hours_column.menu_bloc.sortable_column
              .column_title
                Hours

            #sortable_eligibility_column.menu_bloc.sortable_column
              .column_title
                Quality Tier

        %ul#sortable
          - @home_schools.each_with_index do |student_school, i|
            - school = student_school.school
            %li{id: "#{current_student.id}_#{school.bps_id}", class: "list_row home_school clearfix"}
              %div{id: "#{current_student.id}_#{school.bps_id}_row", class: "li_frame"}

                .desktop.star.line
                  .middle
                    = image_tag('star_starred.png', id: "star_#{student_school.id}_starred", class: 'star_starred', style: "display: #{student_school.starred? ? 'inline' : 'none'}; cursor: pointer;", data: {student_school_id: student_school.id})
                    = image_tag('star_unstarred.png', id: "star_#{student_school.id}_unstarred", class: 'star_unstarred', style: "display: #{student_school.starred? ? 'none' : 'inline'}; cursor: pointer;", data: {student_school_id: student_school.id} )
                  %span{class: "sortable_star", style: "visibility: hidden; display: none;"}
                    = student_school.starred? ? 1 : 3

                .school_name.select.line
                  %span.middle
                    %span.sortable_school_name
                      = school.name
                    - if current_student.sibling_school_ids.present? && current_student.sibling_school_ids.try(:include?, school.bps_id)
                      %span{:aria => {hidden: 'true'}, :class => "select_icon icon-DBPS-Dev-Assets-SRG-12"}

                    - if school.api_basic_info.try(:[], :SchoolType).present? && school.api_basic_info.try(:[], :SchoolType) == 'Exam'
                      %span{:aria => {hidden: 'true'}, :class => "select_icon icon-DBPS-Preferences-Icons-20130930-SRG_exam_school"}

                .box.line.your_fit_icon
                  %span{id: "#{current_student.id}_#{school.bps_id}_icons", class: "middle"}
                    - tag_counter = 0
                    - PreferenceCategory.active(current_student.grade_level).each do |category|
                      - category.active_preferences(current_student.grade_level).each do |preference|
                        - if school.has_preference?(preference)
                        -binding.pry
                          - if current_student.preference_ids.try(:include?, preference.id)
                            %span{:aria => {hidden: 'true'}, id: "school_#{school.id}", data: {tags: "['#{preference.name}']"}, :class => "icon category_icon preference_#{preference.id}_icon #{category.glyph_class}", title: "#{preference.name}"}
                            - tag_counter += 1
                          - else
                            %span{:aria => {hidden: 'true'}, id: "school_#{school.id}", data: {tags: "['#{preference.name}']"}, :class => "icon category_icon preference_#{preference.id}_icon #{category.glyph_class}", style: "display: none;", title: "#{preference.name}"}

                    %span{id: "#{current_student.id}_#{school.bps_id}_icon_count", class: "sortable_fit fit_icon_count", style: "visibility: hidden;"}
                      = tag_counter


                .box.line.getting_there
                  .first_block.middle
                    %span.middle.sortable_distance
                      = transportation_eligibility_icon_helper(student_school, "18px")
                      -if student_school.walk_distance.present? && student_school.walk_distance.strip != '0.00'                        
                        #{spacer_helper(student_school.walk_distance)}&nbsp;mi
                      -else                          
                        #{spacer_helper(student_school.distance)}&nbsp;mi


                  .second_bloc.middle
                    %span{:aria => {hidden: 'true'}, :class => "icon_petit icon-DBPS-Dev-Assets-SRG-14"}
                      = spacer_helper(student_school.walk_time)
                      %span{:aria => {hidden: 'true'}, :class => "icon-DBPS-Dev-Assets-SRG-18"}

                  .second_bloc.middle.last
                    %span{:aria => {hidden: 'true'}, :class => "icon_petit icon-DBPS-Dev-Assets-SRG-17"}
                      = spacer_helper(student_school.drive_time)
                      %span{:aria => {hidden: 'true'}, :class => "icon-DBPS-Dev-Assets-SRG-18"}


                .box.line.school_hours
                  %span.middle.sortable_hours
                    - if school.api_hours.try(:[], :Description).present?
                      = truncate(school.api_hours.try(:[], :Description), length: 18)
                    - else
                      &nbsp;

                .box.line.eligibility
                  .first_block.middle
                    %span.middle.sortable_eligibility
                      - if student_school.tier.present?
                        = school_tier_helper(student_school.tier)
                      - else
                        &nbsp;

                .school_descrip
                  .right_side

                    = render partial: 'schools/learn/school_details', locals: {school: school, student_school: student_school}

                    .clr

                  .clr

        = render partial: 'layouts/schools/notice'

      - else
        %div{style: 'margin: 3em 0 4em 0;'}
          %h2
            There are no matching schools for the program and grade combination that you entered.
