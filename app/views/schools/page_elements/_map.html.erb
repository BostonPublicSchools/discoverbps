<div id='googleMap' style="width: <%= width %>;"></div>

<script src="http://maps.googleapis.com/maps/api/js?key=AIzaSyDY0kkJiTPVd2U7aTOAwhc9ySH6oHxOIYM&sensor=false"></script>

<script>
  function initialize(){
    <% if defined?(resize) && resize == true %>
      $('.global_map').css('height', ($(window).height() / 2) + 'px' );
      $('#googleMap').css('height', ($(window).height() / 2) + 'px' );
    <% end %>

    // Create an array of styles.
    var map_styles = [
      {
      "featureType": "poi.attraction",
      "stylers": [
        { "visibility": "off" }
      ]
      },{
        "featureType": "poi.business",
        "stylers": [
          { "visibility": "off" }
        ]
      },{
        "featureType": "poi.place_of_worship",
        "stylers": [
          { "visibility": "off" }
        ]
      },{
        "featureType": "transit.line",
        "stylers": [
          { "visibility": "off" }
        ]
      },{
        "featureType": "poi.attraction",
        "stylers": [
          { "visibility": "off" }
        ]
      },{
        "featureType": "poi.medical",
        "stylers": [
          { "visibility": "off" }
        ]
      },{
        "featureType": "poi.school",
        "stylers": [
          { "visibility": "off" }
        ]
      },{
        "featureType": "landscape.man_made",
        "stylers": [
          { "visibility": "off" }
        ]
      },{
        "featureType": "poi.park",
        "elementType": "geometry",
        "stylers": [
          { "lightness": 41 }
        ]
      },{
        "featureType": "transit.station.airport",
        "stylers": [
          { "lightness": 49 }
        ]
      },{
        "featureType": "administrative",
        "elementType": "labels.text.fill",
        "stylers": [
          { "saturation": -100 },
          { "lightness": 24 }
        ]
      },{
        "featureType": "road.highway",
        "stylers": [
          { "lightness": 26 }
        ]
      },{
        "featureType": "road.arterial",
        "elementType": "geometry",
        "stylers": [
          { "visibility": "simplified" },
          { "color": "#d6cfc6" },
          { "lightness": 43 }
        ]
      },{
        "featureType": "road.local",
        "elementType": "geometry.fill",
        "stylers": [
          { "color": "#d6cfc6" },
          { "lightness": 42 }
        ]
      },{
        "featureType": "road.local",
        "elementType": "geometry.stroke",
        "stylers": [
          { "visibility": "off" }
        ]
      },{
        "featureType": "road.arterial",
        "elementType": "geometry.stroke",
        "stylers": [
          { "visibility": "off" }
        ]
      },{
        "featureType": "road.arterial",
        "elementType": "geometry.fill",
        "stylers": [
          { "visibility": "on" }
        ]
      },{
        "featureType": "poi.park",
        "elementType": "labels",
        "stylers": [
          { "visibility": "off" }
        ]
      },{
        "featureType": "transit.station.rail",
        "elementType": "labels",
        "stylers": [
          { "saturation": -73 },
          { "lightness": 27 }
        ]
      },{
        "featureType": "road.highway",
        "elementType": "geometry.stroke",
        "stylers": [
          { "visibility": "off" }
        ]
      },{
        "featureType": "road.highway",
        "elementType": "geometry.fill",
        "stylers": [
          { "visibility": "on" },
          { "lightness": -5 }
        ]
      },{
        "featureType": "administrative.land_parcel",
        "stylers": [
          { "visibility": "off" }
        ]
      },{
      }
    ];

    var Marker = function(options) {
      google.maps.Marker.apply(this, arguments);
      if (options.label) {
        this.MarkerLabel = new MarkerLabel({
          map: this.map,
          marker: this,
          text: options.label
        });
        this.MarkerLabel.bindTo('position', this, 'position');
      }
    };

    // Define Marker Shapes
    var MAP_HOME = 'M 239.96,415.88L 23.72,199.6L 96.52,199.56L 96.52,0.080L 383.4,0.080L 383.4,199.52L 456.28,199.52 z';
    var MAP_PIN = 'M 314.692,279.496c0,80.988-65.892,146.88-146.88,146.88S 20.933,360.496, 20.933,279.496c0-74.868, 56.364-136.704, 128.88-145.62 l0-144.252 l 36,0 L 185.813,133.876 C 258.317,142.792, 314.692,204.64, 314.692,279.496z';

    // Create Custom Marker Object
    Marker.prototype = new google.maps.Marker();

    // Custom Marker SetMap
    Marker.prototype.setMap = function() {
      google.maps.Marker.prototype.setMap.apply(this, arguments);
      (this.MarkerLabel) && this.MarkerLabel.setMap.apply(this.MarkerLabel, arguments);
    };

    // Marker Label Overlay
    var MarkerLabel = function(options) {
      var self = this;
      this.setValues(options);

      // Create the label container
      this.div = document.createElement('div');
      this.div.className = 'marker-label';
      var span = document.createElement('span');
      span.className = "marker-icon";
      this.div.appendChild(span);

      // Trigger the marker click handler if clicking on the label
      google.maps.event.addDomListener(this.div, 'click', function(e){
        (e.stopPropagation) && e.stopPropagation();
        google.maps.event.trigger(self.marker, 'click');
      });
    };

    // Create MarkerLabel Object
    MarkerLabel.prototype = new google.maps.OverlayView;

    // Marker Label onAdd
    MarkerLabel.prototype.onAdd = function() {
         var pane = this.getPanes().overlayImage.appendChild(this.div);
         var self = this;
         this.listeners = [
              google.maps.event.addListener(this, 'position_changed', function() { self.draw(); }),
              google.maps.event.addListener(this, 'text_changed', function() { self.draw(); }),
              google.maps.event.addListener(this, 'zindex_changed', function() { self.draw(); })
         ];
    };

    // Marker Label onRemove
    MarkerLabel.prototype.onRemove = function() {
         this.div.parentNode.removeChild(this.div);
         for (var i = 0, I = this.listeners.length; i < I; ++i) {
              google.maps.event.removeListener(this.listeners[i]);
         }
    };

    // Implement draw
    MarkerLabel.prototype.draw = function() {
         var projection = this.getProjection();
         var position = projection.fromLatLngToDivPixel(this.get('position'));
         var div = this.div;
         div.style.left = position.x + 'px';
         div.style.top = position.y + 'px';
         div.style.display = 'block';
         div.style.zIndex = this.get('zIndex'); //ALLOW LABEL TO OVERLAY MARKER
         this.div.innerHTML = this.get('text').toString();
    };

     // Create a new StyledMapType object, passing it the array of styles,
  	  // as well as the name to be displayed on the map type control.
  	 	var styledMap = new google.maps.StyledMapType(map_styles,{name: "Styled Map"});
      <% if current_student.latitude.present? && current_student.longitude.present? && current_student.latitude != 0 && current_student.longitude != 0 %>
        var myLatlng =  new google.maps.LatLng(<%= current_student.latitude %>,<%= current_student.longitude %>);
      <% else %>
        var myLatlng = new google.maps.LatLng(42.3581,-71.0636);
      <% end %>
      var latlngbounds = new google.maps.LatLngBounds();
  		var mapProp = {
  		  center:myLatlng,
  		  zoom:13,
  			panControl: <%= map_controls %>,
  			zoomControl: <%= map_controls %>,
  			mapTypeControl: false,
  			scaleControl: false,
  			draggable: false,
  			scrollwheel: false,
  			streetViewControl: false,
  			overviewMapControl: false,

  			mapTypeControlOptions: {
  			  mapTypeIds: [google.maps.MapTypeId.ROADMAP, 'map_style']
  			}
  		};

  		var map = new google.maps.Map(document.getElementById("googleMap"),mapProp);

      // GEOJSON boundaries

      var boundaryStyle = {
        fillOpacity: 0,
        strokeColor: '#80BCE7',
        strokeWeight: 0,
        clickable: false
      }

      // Load city boundaries

      $.getJSON('/city_boundary.geojson', function (data) {
        cityBoundaries = map.data.addGeoJson(data);

        $.each(cityBoundaries, function (index, feature) {
          map.data.overrideStyle(feature, {strokeWeight: 4});
        });

        google.maps.event.addDomListener(document.getElementById('home_schools_tab'), 'click', function () {
          $.each(cityBoundaries, function (index, feature) {
            map.data.add(feature);
            map.data.overrideStyle(feature, {strokeWeight: 4});
          });
        });

        <% if @zone_schools.present? %>
          google.maps.event.addDomListener(document.getElementById('zone_schools_tab'), 'click', function () {
            $.each(cityBoundaries, function (index, feature) {
              map.data.add(feature);
              map.data.overrideStyle(feature, {strokeWeight: 4});
            });
          });
        <% end %>

        <% if @ell_schools.present? %>
          google.maps.event.addDomListener(document.getElementById('ell_schools_tab'), 'click', function () {
            $.each(cityBoundaries, function (index, feature) {
              map.data.remove(feature);
            });
          });
        <% end %>

        <% if @sped_schools.present? %>
          google.maps.event.addDomListener(document.getElementById('sped_schools_tab'), 'click', function () {
            $.each(cityBoundaries, function (index, feature) {
              map.data.remove(feature);
            });
          });
        <% end %>
      });

      // Load ELL boundaries
      <% if @ell_schools.present? %>

        $.getJSON('/ell_clusters.geojson', function (data) {
          ellBoundaries = map.data.addGeoJson(data);

          google.maps.event.addDomListener(document.getElementById('home_schools_tab'), 'click', function () {
            $.each(ellBoundaries, function (index, feature) {
              map.data.remove(feature);
            });
          });

          <% if @zone_schools.present? %>
            google.maps.event.addDomListener(document.getElementById('zone_schools_tab'), 'click', function () {
              $.each(ellBoundaries, function (index, feature) {
                map.data.remove(feature);
              });
            });
          <% end %>

          google.maps.event.addDomListener(document.getElementById('ell_schools_tab'), 'click', function () {
            $.each(ellBoundaries, function (index, feature) {
              map.data.add(feature);
              map.data.overrideStyle(feature, {strokeWeight: 4});
            });
          });

          <% if @sped_schools.present? %>
            google.maps.event.addDomListener(document.getElementById('sped_schools_tab'), 'click', function () {
              $.each(ellBoundaries, function (index, feature) {
                map.data.remove(feature);
              });
            });
          <% end %>
        });
      <% end %>

      // Load SPED boundaries

      <% if @sped_schools.present? %>
        $.getJSON('/sped_clusters.geojson', function (data) {
          spedBoundaries = map.data.addGeoJson(data);

          google.maps.event.addDomListener(document.getElementById('home_schools_tab'), 'click', function () {
            $.each(spedBoundaries, function (index, feature) {
              map.data.remove(feature);
            });
          });

          <% if @zone_schools.present? %>
            google.maps.event.addDomListener(document.getElementById('zone_schools_tab'), 'click', function () {
              $.each(spedBoundaries, function (index, feature) {
                map.data.remove(feature);
              });
            });
          <% end %>

          <% if @ell_schools.present? %>
            google.maps.event.addDomListener(document.getElementById('ell_schools_tab'), 'click', function () {
              $.each(spedBoundaries, function (index, feature) {
                map.data.remove(feature);
              });
            });
          <% end %>

          google.maps.event.addDomListener(document.getElementById('sped_schools_tab'), 'click', function () {
            $.each(spedBoundaries, function (index, feature) {
              map.data.add(feature);
              map.data.overrideStyle(feature, {strokeWeight: 4});
            });
          });
        });
      <% end %>

      map.data.setStyle(boundaryStyle);


      // Markers

      var allMarkers = [];
      var homeMarkers = [];
      var zoneMarkers = [];
      var ellMarkers = [];
      var spedMarkers = [];

      function setMarkers(markers) {
        for (var i = 0; i < markers.length; i++) {
          markers[i].setMap(map);
        }
      }

      function clearMarkers() {
        for (var i = 0; i < allMarkers.length; i++) {
          allMarkers[i].setMap(null);
        }
      }

      var markerIcon = {
        url: '/assets/map_pins/DBPS_MapPins_Large_Blue_Blank.png',
        size: new google.maps.Size(19, 29),
        origin: new google.maps.Point(0, 0),
        anchor: new google.maps.Point(9, 25),
      };

      // Display the home schools

      <% current_student.home_schools.rank(:sort_order).each_with_index do |student_school, i| %>
        <% if student_school.school.latitude.present? && student_school.school.longitude.present? %>
          var coordinates = new google.maps.LatLng(<%= student_school.school.latitude %>, <%= student_school.school.longitude %>);
          latlngbounds.extend(coordinates);

          var marker = new google.maps.Marker({
            position: coordinates,
            icon: markerIcon,
            title: '<%= escape_javascript(student_school.school.name) %>'
          });

          allMarkers.push(marker);
          homeMarkers.push(marker);

          var infowindow = new google.maps.InfoWindow({});

          google.maps.event.addListener(marker, 'mouseover', function() {
            infowindow.setContent('<div><h3><%= student_school.school.name %></h3><%=raw student_school.school.map_address %></div>');
            infowindow.open(map,this);
          });

          google.maps.event.addListener(marker, 'mouseout', function() {
            infowindow.close(map,this);
          });
        <% end %>
      <% end %>

      <% current_student.zone_schools.rank(:sort_order).each_with_index do |student_school, i| %>
        <% if student_school.school.latitude.present? && student_school.school.longitude.present? %>
          var coordinates = new google.maps.LatLng(<%= student_school.school.latitude %>, <%= student_school.school.longitude %>);
          latlngbounds.extend(coordinates);

          var marker = new google.maps.Marker({
            position: coordinates,
            icon: markerIcon,
            title: '<%= escape_javascript(student_school.school.name) %>'
          });

          allMarkers.push(marker);
          zoneMarkers.push(marker);

          var infowindow = new google.maps.InfoWindow({});

          google.maps.event.addListener(marker, 'mouseover', function() {
            infowindow.setContent('<div><h3><%= student_school.school.name %></h3><%=raw student_school.school.map_address %></div>');
            infowindow.open(map,this);
          });

          google.maps.event.addListener(marker, 'mouseout', function() {
            infowindow.close(map,this);
          });

        <% end %>
      <% end %>

      <% current_student.ell_schools.rank(:sort_order).each_with_index do |student_school, i| %>
        <% if student_school.school.latitude.present? && student_school.school.longitude.present? %>
          var coordinates = new google.maps.LatLng(<%= student_school.school.latitude %>, <%= student_school.school.longitude %>);
          latlngbounds.extend(coordinates);

          var marker = new google.maps.Marker({
            position: coordinates,
            icon: markerIcon,
            title: '<%= escape_javascript(student_school.school.name) %>'
          });

          allMarkers.push(marker);
          ellMarkers.push(marker);

          var infowindow = new google.maps.InfoWindow({});

          google.maps.event.addListener(marker, 'mouseover', function() {
            infowindow.setContent('<div><h3><%= student_school.school.name %></h3><%=raw student_school.school.map_address %></div>');
            infowindow.open(map,this);
          });

          google.maps.event.addListener(marker, 'mouseout', function() {
            infowindow.close(map,this);
          });

        <% end %>
      <% end %>

      <% current_student.sped_schools.rank(:sort_order).each_with_index do |student_school, i| %>
        <% if student_school.school.latitude.present? && student_school.school.longitude.present? %>
          var coordinates = new google.maps.LatLng(<%= student_school.school.latitude %>, <%= student_school.school.longitude %>);
          latlngbounds.extend(coordinates);

          var marker = new google.maps.Marker({
            position: coordinates,
            icon: markerIcon,
            title: '<%= escape_javascript(student_school.school.name) %>'
          });

          allMarkers.push(marker);
          spedMarkers.push(marker);

          var infowindow = new google.maps.InfoWindow({});

          google.maps.event.addListener(marker, 'mouseover', function() {
            infowindow.setContent('<div><h3><%= student_school.school.name %></h3><%=raw student_school.school.map_address %></div>');
            infowindow.open(map,this);
          });

          google.maps.event.addListener(marker, 'mouseout', function() {
            infowindow.close(map,this);
          });

        <% end %>
      <% end %>

      // Display the appropriate markers on page load

      <% unless (params[:list_type] == 'zone' || params[:list_type] == 'ell' || params[:list_type] == 'sped') %>
        clearMarkers();
        setMarkers(homeMarkers);
      <% end %>

      <% if params[:list_type] == 'zone' %>
        clearMarkers();
        setMarkers(zoneMarkers);
      <% end %>

      <% if params[:list_type] == 'ell' %>
        clearMarkers();
        setMarkers(ellMarkers);
      <% end %>

      <% if params[:list_type] == 'sped' %>
        clearMarkers();
        setMarkers(spedMarkers);
      <% end %>


      // Display the Home Schools on click

      if ($('#home_schools_tab').length > 0) {
        google.maps.event.addDomListener(document.getElementById('home_schools_tab'), 'click', function() {
          clearMarkers();
          setMarkers(homeMarkers);
        });
      }

      // Display the Zone Schools on click
      if ($('#zone_schools_tab').length > 0) {
        google.maps.event.addDomListener(document.getElementById('zone_schools_tab'), 'click', function() {
          clearMarkers();
          setMarkers(zoneMarkers);
        });
      }

      // Display the ELL Schools on click
      if ($('#ell_schools_tab').length > 0) {
        google.maps.event.addDomListener(document.getElementById('ell_schools_tab'), 'click', function() {
          clearMarkers();
          setMarkers(ellMarkers);
        });
      }

      // Display the SPED Schools on click
      if ($('#sped_schools_tab').length > 0) {
        google.maps.event.addDomListener(document.getElementById('sped_schools_tab'), 'click', function() {
          clearMarkers();
          setMarkers(spedMarkers);
        });
      }

      // Set the home icon

      <% if current_student.latitude.present? && current_student.longitude.present? && current_student.latitude != 0 && current_student.longitude != 0 %>
        var coordinates = new google.maps.LatLng(<%= current_student.latitude %>, <%= current_student.longitude %>);
        latlngbounds.extend(coordinates);
        var homeMarker = new google.maps.Marker({
          position: coordinates,
          icon: {
            path: MAP_HOME,
            fillColor: '#000000',
            fillOpacity: 1,
            strokeColor: '',
            strokeWeight: 0,
            rotation: 180,
            scale: 1/22
          },
          label: '<i class="icon-map-home"></i>',
          map: map
        });
      <% end %>

      var homeInfowindow = new google.maps.InfoWindow({});

      google.maps.event.addListener(HomeMarker, 'mouseover', function() {
        homeInfowindow.setContent('<div><h3>Home</h3><%= current_student.street_number %> <%= current_student.street_name %>, <%= current_student.zipcode %>');
        homeInfowindow.open(map,this);
      });

      google.maps.event.addListener(HomeMarker, 'mouseout', function() {
        homeInfowindow.close(map,this);
      });

  		// Associate the styled map with the MapTypeId and set it to display.
  		  map.fitBounds(latlngbounds);
        map.mapTypes.set('map_style', styledMap);
  		  map.setMapTypeId('map_style');
  	}

  		google.maps.event.addDomListener(window, 'load', initialize);

</script>
